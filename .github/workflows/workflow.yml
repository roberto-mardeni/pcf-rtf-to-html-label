name: "Automated Workflow"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: RtfToHtmlControlsSolution

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup MSBUILD
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install Node dependencies
      run: npm ci

    - name: Build
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /t:rebuild /restore 
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: RtfToHtmlControlsSolution
        path: ${{env.SOLUTION_FILE_PATH}}\bin\${{env.BUILD_CONFIGURATION}}\${{env.SOLUTION_FILE_PATH}}.zip

    - name: Extract Solution Version
      id: solution-version
      uses: mavrosxristoforos/get-xml-info@1.0
      with:
        xml-file: ${{env.SOLUTION_FILE_PATH}}\src\Other\Solution.xml
        xpath: "//ImportExportXml/SolutionManifest/Version"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: v${{ steps.solution-version.outputs.info }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: release-managed-solution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{env.SOLUTION_FILE_PATH}}\bin\${{env.BUILD_CONFIGURATION}}\${{env.SOLUTION_FILE_PATH}}.zip
        asset_name: ${{env.SOLUTION_FILE_PATH}}.zip
        asset_content_type: application/zip
